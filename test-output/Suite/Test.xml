<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-IP564CF" failures="0" tests="3" name="Test" time="4.873" errors="0" timestamp="2022-08-15T23:32:59 IST">
  <testcase classname="TestNg.PracticeClass" name="@BeforeTest beforeTest1" time="4.743">
    <failure type="org.openqa.selenium.InvalidArgumentException" message="invalid argument
  (Session info: chrome=104.0.5112.81)
Build info: version: &amp;apos;4.2.2&amp;apos;, revision: &amp;apos;683ccb65d6&amp;apos;
System info: host: &amp;apos;DESKTOP-IP564CF&amp;apos;, ip: &amp;apos;192.168.1.103&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.2&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3dbe122b773f40c7aad48f7aa278cdad, get {url=Google}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 104.0.5112.81, chrome: {chromedriverVersion: 104.0.5112.79 (3cf3e8c8a07d..., userDataDir: C:\Users\dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57270}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57270/devtoo..., se:cdpVersion: 104.0.5112.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3dbe122b773f40c7aad48f7aa278cdad">
      <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument
  (Session info: chrome=104.0.5112.81)
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'DESKTOP-IP564CF', ip: '192.168.1.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3dbe122b773f40c7aad48f7aa278cdad, get {url=Google}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 104.0.5112.81, chrome: {chromedriverVersion: 104.0.5112.79 (3cf3e8c8a07d..., userDataDir: C:\Users\dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57270}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57270/devtoo..., se:cdpVersion: 104.0.5112.81, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 3dbe122b773f40c7aad48f7aa278cdad
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:351)
at TestNg.PracticeClass.beforeTest1(PracticeClass.java:48)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest1 -->
  <testcase classname="TestNg.PracticeClass" name="@BeforeClass beforeClass" time="-1.660586579473E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="TestNg.PracticeClass" name="@BeforeMethod beforeMethod" time="-1.660586579491E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNg.PracticeClass" name="@AfterMethod afterMethod" time="-1.660586579506E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNg.PracticeClass" name="@BeforeMethod beforeMethod" time="-1.660586579517E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNg.PracticeClass" name="@AfterMethod afterMethod" time="-1.660586579527E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNg.PracticeClass" name="@BeforeMethod beforeMethod" time="-1.660586579531E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="TestNg.PracticeClass" name="@AfterMethod afterMethod" time="-1.660586579543E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="TestNg.PracticeClass" name="@AfterClass afterClass" time="-1.660586579551E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="TestNg.PracticeClass" name="@AfterTest afterTest" time="-1.660586579555E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="TestNg.PracticeClass" name="firstTest" time="0.0">
    <skipped/>
  </testcase> <!-- firstTest -->
  <testcase classname="TestNg.PracticeClass" name="firstTesttttt" time="0.0">
    <skipped/>
  </testcase> <!-- firstTesttttt -->
  <testcase classname="TestNg.PracticeClass" name="firstTestttttyyy" time="0.0">
    <skipped/>
  </testcase> <!-- firstTestttttyyy -->
</testsuite> <!-- Test -->
